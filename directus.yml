version: '3.3'

services:
  directus:
    image: directus/directus:9

    volumes:
      - directus_uploads:/directus/uploads
      - directus_extensions:/directus/extensions
    networks:
      - directus_network
    #depends_on: not working in docker swarm
      #- cache
      #- database
    tty: true
    stdin_open: true
    environment:
      KEY: '${UNIQUE_KEY}'
      SECRET: '${UNIQUE_SECRET}'
      DB_CLIENT: 'pg'
      DB_HOST: 'database'
      DB_PORT: '5432'
      DB_DATABASE: '${PROJECT_NAME}-db'
      DB_USER: '${DB_USER}'
      DB_PASSWORD: '${DB_PASSWORD}'
      CACHE_ENABLED: 'true'
      CACHE_STORE: 'redis'
      CACHE_REDIS: 'redis://cache:6379'
      ADMIN_EMAIL: '${ADMIN_EMAIL}'
      ADMIN_PASSWORD: '${ADMIN_PASSWORD}'
      PUBLIC_URL: '${DIRECTUS_DOMAIN}'
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
      mode: replicated
      replicas: 1
      placement:
        constraints: 
          - ${NODE_PLACEMENT}
      labels:
        traefik.enable: "true"
        traefik.http.routers.directus-router.rule: Host(`${DIRECTUS_DOMAIN}`)
        traefik.http.services.directus-router.loadbalancer.server.port: 8055


  database:
    image: postgis/postgis:13-master
    tty: true
    stdin_open: true
    volumes:
      - directus_db:/var/lib/postgresql/data
    networks:
      - directus_network
    environment:
      POSTGRES_DB: '${PROJECT_NAME}-db'
      POSTGRES_USER: '${DB_USER}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'


  cache:
    container_name: cache
    image: redis:6
    networks:
      - directus_network


volumes:
  directus_uploads:
  directus_extensions:
  directus_db:


networks:
  directus_network:
  traefik-public:
    external: true
